<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>systemd on Yet another tech blog</title><link>https://cyrillesondag.github.io/tags/systemd/</link><description>Recent content in systemd on Yet another tech blog</description><generator>Hugo -- gohugo.io</generator><language>fr-fr</language><copyright>© {year}</copyright><lastBuildDate>Tue, 04 Dec 2012 10:34:56 +0200</lastBuildDate><atom:link href="https://cyrillesondag.github.io/tags/systemd/index.xml" rel="self" type="application/rss+xml"/><item><title>Débuter avec RxJava</title><link>https://cyrillesondag.github.io/blog/starting-rxjava/</link><pubDate>Tue, 04 Dec 2012 10:34:56 +0200</pubDate><guid>https://cyrillesondag.github.io/blog/starting-rxjava/</guid><description>Pourquoi utiliser Rx ? Le Framework Rx prend une importance croissante dans le développement d&amp;rsquo;applications mobiles. Il apporte une très grande flexibilité dans la gestion des appels asynchrones et permet de répondre facilement aux problèmes de synchronisation des événements (le fameux Callback Hell).
Néanmoins l&amp;rsquo;apprentissage peut être assez déroutant au départ si l&amp;rsquo;on ne comprend pas la philosophie sur laquelle est basée ce Framework. Une fois cette étape achevé, il devient très simple de répondre à des problématiques d’enchaînement d’événements complexes.</description></item></channel></rss>